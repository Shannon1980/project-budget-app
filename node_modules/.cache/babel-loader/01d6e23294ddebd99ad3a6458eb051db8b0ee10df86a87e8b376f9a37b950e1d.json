{"ast":null,"code":"import _objectSpread from\"/workspace/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";const API_BASE=process.env.REACT_APP_API_BASE_URL||'http://localhost:5179';const defaultHeaders={'Content-Type':'application/json'};const request=async function(path){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const response=await fetch(\"\".concat(API_BASE).concat(path),_objectSpread({headers:defaultHeaders},options));if(!response.ok){const text=await response.text().catch(()=>'');const error=new Error(\"API \".concat(options.method||'GET',\" \").concat(path,\" failed: \").concat(response.status,\" \").concat(text));error.status=response.status;throw error;}const contentType=response.headers.get('content-type')||'';if(contentType.includes('application/json')){return response.json();}return response.text();};export const getState=async()=>{return request('/state/1');};export const putState=async state=>{return request('/state/1',{method:'PUT',body:JSON.stringify(state)});};","map":{"version":3,"names":["API_BASE","process","env","REACT_APP_API_BASE_URL","defaultHeaders","request","path","options","arguments","length","undefined","response","fetch","concat","_objectSpread","headers","ok","text","catch","error","Error","method","status","contentType","get","includes","json","getState","putState","state","body","JSON","stringify"],"sources":["/workspace/src/api/client.js"],"sourcesContent":["const API_BASE = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5179';\n\nconst defaultHeaders = {\n  'Content-Type': 'application/json'\n};\n\nconst request = async (path, options = {}) => {\n  const response = await fetch(`${API_BASE}${path}`, {\n    headers: defaultHeaders,\n    ...options\n  });\n  if (!response.ok) {\n    const text = await response.text().catch(() => '');\n    const error = new Error(`API ${options.method || 'GET'} ${path} failed: ${response.status} ${text}`);\n    error.status = response.status;\n    throw error;\n  }\n  const contentType = response.headers.get('content-type') || '';\n  if (contentType.includes('application/json')) {\n    return response.json();\n  }\n  return response.text();\n};\n\nexport const getState = async () => {\n  return request('/state/1');\n};\n\nexport const putState = async (state) => {\n  return request('/state/1', {\n    method: 'PUT',\n    body: JSON.stringify(state)\n  });\n};\n\n"],"mappings":"+FAAA,KAAM,CAAAA,QAAQ,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,EAAI,uBAAuB,CAE9E,KAAM,CAAAC,cAAc,CAAG,CACrB,cAAc,CAAE,kBAClB,CAAC,CAED,KAAM,CAAAC,OAAO,CAAG,cAAAA,CAAOC,IAAI,CAAmB,IAAjB,CAAAC,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CACvC,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIb,QAAQ,EAAAa,MAAA,CAAGP,IAAI,EAAAQ,aAAA,EAC7CC,OAAO,CAAEX,cAAc,EACpBG,OAAO,CACX,CAAC,CACF,GAAI,CAACI,QAAQ,CAACK,EAAE,CAAE,CAChB,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAN,QAAQ,CAACM,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,IAAM,EAAE,CAAC,CAClD,KAAM,CAAAC,KAAK,CAAG,GAAI,CAAAC,KAAK,QAAAP,MAAA,CAAQN,OAAO,CAACc,MAAM,EAAI,KAAK,MAAAR,MAAA,CAAIP,IAAI,cAAAO,MAAA,CAAYF,QAAQ,CAACW,MAAM,MAAAT,MAAA,CAAII,IAAI,CAAE,CAAC,CACpGE,KAAK,CAACG,MAAM,CAAGX,QAAQ,CAACW,MAAM,CAC9B,KAAM,CAAAH,KAAK,CACb,CACA,KAAM,CAAAI,WAAW,CAAGZ,QAAQ,CAACI,OAAO,CAACS,GAAG,CAAC,cAAc,CAAC,EAAI,EAAE,CAC9D,GAAID,WAAW,CAACE,QAAQ,CAAC,kBAAkB,CAAC,CAAE,CAC5C,MAAO,CAAAd,QAAQ,CAACe,IAAI,CAAC,CAAC,CACxB,CACA,MAAO,CAAAf,QAAQ,CAACM,IAAI,CAAC,CAAC,CACxB,CAAC,CAED,MAAO,MAAM,CAAAU,QAAQ,CAAG,KAAAA,CAAA,GAAY,CAClC,MAAO,CAAAtB,OAAO,CAAC,UAAU,CAAC,CAC5B,CAAC,CAED,MAAO,MAAM,CAAAuB,QAAQ,CAAG,KAAO,CAAAC,KAAK,EAAK,CACvC,MAAO,CAAAxB,OAAO,CAAC,UAAU,CAAE,CACzBgB,MAAM,CAAE,KAAK,CACbS,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACH,KAAK,CAC5B,CAAC,CAAC,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}